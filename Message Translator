using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

namespace Message_Translator
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int numberOfInputs = int.Parse(Console.ReadLine());

            for (int i = 0; i < numberOfInputs; i++)
            {

                string command = Console.ReadLine();

                Regex regex = new Regex(@"\!{1}(?'command'[A-Z]{1}[a-z]{2,})\!{1}\:{1}\[{1}(?'message'[A-Za-z]{8,})\]{1}");

                Match match = regex.Match(command);
                if (match.Success)
                {
                    MatchCollection matches = regex.Matches(command);

                    List<int> digits = new List<int>();

                    foreach (Match m in matches)
                    {
                        string chars = m.Groups["message"].Value;

                        for (int j = 0; j < chars.Length; j++)
                        {
                            digits.Add(chars[j]);
                        }
                        string commandMessage = m.Groups["command"].Value;
                        
                        Console.WriteLine($"{commandMessage}: {string.Join(" ", digits)}");
                    }
                }
                else
                {
                    Console.WriteLine("The message is invalid");
                }
            }

        }
    }
}
